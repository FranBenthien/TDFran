@page "/login"

@using Services;
@using Microsoft.AspNetCore.Components

@inject UserService service
@inject NavigationManager nav
@inject ProtectedSessionStorage storage

<div class="logregcontainer">
    <div class="registercontainer">
        <p>
            <label>Nome Completo</label>
            <input type="text" @bind-value="@name"/>
        </p>

        <p>
            <label>Senha</label>
            <input type="password" @bind-value="@password"/>
        </p>

        <p>
            <label>Repetir Senha</label>
            <input type="password" @bind-value="@repeatpassword"/>
        </p>

        <p>
            <label>Data de Nascimento</label>
            <input type="date" @bind-value="@birth"/>
        </p>

        <p>
            <label>Nome de Usuario</label>
            <input type="text" @bind-value="@userId"/>
        </p>

        <button onclick="@CreateAccount">
            Criar Conta
        </button>
    </div>
    <div class="logincontainer">
        @if (loginError != "")
        {
        <p>
            <label style="color: red;">@loginError</label>
        </p>
        }

        <p>
            <label>Nome de Usuario</label>
            <input type="text" @bind-value="@userId"/>
        </p>

        <p>
            <label>Senha</label>
            <input type="password" @bind-value="@password"/>
        </p>

        <button onclick="@UserLogin">
            Logar
        </button>
    </div>
</div>


@code 
{
    private string name;
    private string password;
    private string repeatpassword;
    private DateTime birth;
    private string userId;

    private string loginError;

    public async void CreateAccount()
    {
        await service.Register(
            this.name, 
            this.userId,
            this.birth, 
            this.password);

        this.name = "";
        this.userId = "";
        this.birth = DateTime.Now;
        this.password = "";

        this.StateHasChanged();  // diz que status da tela mudou e que precisa atualizar ela novamente

    }

    public async void UserLogin()
    {
        var result = await service.Login(
            this.userId,
            this.password
        );
        if (result == null)
        {
            loginError = "Senha ou login incorreto.";
            StateHasChanged();
            return;
        }
            
        await storage.   //finalizar

        nav.NavigateTo("/");

    }
}
